/**
 * Shared Logging Utilities
 *
 * A common logging module that provides consistent formatting and styling
 * for all CLI scripts in the project. Includes color helpers, formatting
 * utilities, and various logging functions with visual styling similar to
 * Astro CLI output.
 *
 * @module logger
 *
 * Generated by Claude (claude-3.7-sonnet-thinking)
 */

// Console output styles
export const colors = {
  // Reset
  reset: '\x1B[0m',
  // Text styles
  bold: '\x1B[1m',
  dim: '\x1B[2m',
  // Text colors
  black: '\x1B[30m',
  white: '\x1B[37m',
  red: '\x1B[31m',
  green: '\x1B[32m',
  yellow: '\x1B[33m',
  blue: '\x1B[34m',
  magenta: '\x1B[35m',
  cyan: '\x1B[36m',
  gray: '\x1B[90m',
  // Background colors
  bgGreen: '\x1B[42m',
  bgRed: '\x1B[41m',
  bgBlack: '\x1B[40m',
  bgBlue: '\x1B[44m',
  bgMagenta: '\x1B[45m',
}

/**
 * Format file size in a human-readable format
 * @param {number} bytes - Size in bytes
 * @returns {string} Formatted size
 */
export function formatSize(bytes) {
  if (bytes < 1024) {
    return `${bytes} B`
  }
  if (bytes < 1024 * 1024) {
    return `${(bytes / 1024).toFixed(2)} kB`
  }
  return `${(bytes / (1024 * 1024)).toFixed(2)} MB`
}

/**
 * Get current timestamp for logging
 * @returns {string} Formatted timestamp
 */
export function getTimestamp() {
  const now = new Date()
  return `${colors.dim}[${now.toLocaleTimeString()}]${colors.reset}`
}

/**
 * Standard log with category
 * @param {string} category - Log category label
 * @param {string} message - Log message
 * @param {string} categoryColor - ANSI color code for category
 */
export function log(category, message, categoryColor = colors.blue) {
  console.log(`${getTimestamp()} ${categoryColor}${category}${colors.reset} ${message}`)
}

/**
 * Group log with highlighted header
 * @param {string} title - Group title
 * @param {string} details - Optional details
 */
export function logGroup(title, details = '') {
  console.log(
    `\n${colors.bold}${colors.white}${colors.bgBlue} ${title} ${colors.reset}${
      details ? ` ${details}` : ''
    }`,
  )
}

/**
 * Error log with red background
 * @param {string} message - Error message
 * @param {string} details - Optional error details
 */
export function logError(message, details = '') {
  console.error(
    `${getTimestamp()} ${colors.bold}${colors.white}${colors.bgRed} ERROR ${colors.reset} ${message}${
      details ? `\n${details}` : ''
    }`,
  )
}

/**
 * Success log with green background
 * @param {string} message - Success message
 */
export function logSuccess(message) {
  console.log(`${getTimestamp()} ${colors.bold}${colors.white}${colors.bgGreen} SUCCESS ${colors.reset} ${message}`)
}
