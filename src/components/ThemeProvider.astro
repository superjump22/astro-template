<script is:inline>
  const applyTheme = (theme) => {
    const resolvedTheme = (() => {
      if (['dark', 'light'].includes(theme)) {
        return theme
      }
      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')
      return mediaQuery.matches ? 'dark' : 'light'
    })()

    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)')
    if (!window.XivStrat || !document.startViewTransition || mediaQuery.matches) {
      if (resolvedTheme === 'dark') {
        document.documentElement.classList.add('dark')
      } else {
        document.documentElement.classList.remove('dark')
      }
    } else {
      document.startViewTransition(() => {
        if (resolvedTheme === 'dark') {
          document.documentElement.classList.add('dark')
        } else {
          document.documentElement.classList.remove('dark')
        }
      })
    }
  }

  const initTheme = () => {
    const localStorageTheme = localStorage.getItem('theme') ?? ''
    const theme = (() => {
      if (['dark', 'light'].includes(localStorageTheme)) {
        return localStorageTheme
      }
      return 'system'
    })()

    if (localStorageTheme === '') {
      localStorage.setItem('theme', theme)
    }
    applyTheme(theme)
  }

  initTheme()

  if (!window.XivStrat) {
    window.XivStrat = {}

    window.XivStrat.setTheme = (theme) => {
      if (['dark', 'light', 'system'].includes(theme)) {
        localStorage.setItem('theme', theme)
        applyTheme(theme)
      }
    }

    window.addEventListener('storage', (event) => {
      if (event.key === 'theme') {
        applyTheme(event.newValue)
      }
    })

    if (window.matchMedia) {
      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')
      mediaQuery.addEventListener('change', () => {
        if (localStorage.getItem('theme') === 'system') {
          applyTheme('system')
        }
      })
    }

    // See https://docs.astro.build/en/guides/view-transitions/#script-re-execution
    // Runs in response to the astro:after-swap event, which happens immediately after the new page has replaced the old page and before the DOM elements are painted to the screen.
    // This avoids a flash of light theme after page navigation by checking and, if necessary, setting the dark mode theme before the new page is rendered
    document.addEventListener('astro:after-swap', initTheme)
  }
</script>
